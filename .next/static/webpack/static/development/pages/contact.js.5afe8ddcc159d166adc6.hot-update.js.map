{"version":3,"file":"static/webpack/static/development/pages/contact.js.5afe8ddcc159d166adc6.hot-update.js","sources":["webpack:///./components/ContactForm.js"],"sourcesContent":["import { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport Resizer from './Resizer.js';\nclass ContactForm extends Component {\n  constructor(){\n    super();\n    this.state = {\n      message: \"\",\n      name: \"\",\n      email: \"\",\n      messageValid: \"unset\",\n      emailValid: \"unset\",\n      submitDisabled: false,\n      textarea: null\n    }\n  }\n  handleMessageKeyUp = (e) => {\n    const value = e.target.value;\n    if(value.length > 30){\n      this.setState({\n        message: value,\n        messageValid: true\n      })\n    } else {\n      this.setState({\n        messageValid: false\n      })\n    }\n  }\n  handleNameChange = (e) => {\n    const value = e.target.value;\n    this.setState({\n      name: value\n    })\n  }\n  handleEmailChange = (e) => {\n    const value = e.target.value;\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const isValid = re.test(String(value).toLowerCase());\n    this.setState({\n      emailValid: isValid,\n      email: value\n    })\n  }\n  onSuccessMessage=(msg)=>{\n    //alert(\"success: \"+msg);\n    const { toastManager } = this.props;\n    toastManager.add(msg, {\n      appearance: 'success',\n      autoDismiss: true,\n    })\n  }\n\n  onErrorMessage=(msg)=>{\n    //alert(\"error: \"+msg);\n    const { toastManager } = this.props;\n    toastManager.add(msg, {\n      appearance: 'warning',\n      autoDismiss: true,\n    })\n  }\n  handleSubmitForm = () => {\n    if(!navigator.onLine) return this.onErrorMessage(\"Your are not online, please reconnect before sending feedback.\");\n    if(this.state.emailValid === true && this.state.messageValid){\n      ReactGA.event({\n        category: 'Contact',\n        action: 'Form submit'\n      });\n      this.setState({\n        submitDisabled: true\n      });\n      setTimeout(()=>{\n        this.setState({\n          submitDisabled: false\n        });\n      }, 1000*6);\n      //fetch POST\n      fetch(\"/contact\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          message: this.state.message,\n          email: this.state.email\n        })\n      }).then(res=>{\n        return res.json();\n      }).then(res=>{\n        if(res.success){\n          this.onSuccessMessage(res.message);\n        } else {\n          this.onErrorMessage(res.message);\n        }\n      }).catch((err)=>{\n        console.warning(\"error sending email:\", err);\n        this.onErrorMessage(\"Error sending message. Please try again later.\");\n      })\n    } else {\n      if(!this.state.messageValid || this.state.messageValid === \"unset\") this.onErrorMessage(\"The message is too short. Please send more than 30 characters.\");\n      if(!this.state.emailValid || this.state.emailValid === \"unset\") this.onErrorMessage(\"Please enter a valid email address.\");\n    }\n  }\n  render(){\n    return (<React.Fragment>\n      <Resizer\n        lock={{width:true}}\n        textarea={this.state.textarea}\n        >\n        <p style={{fontSize:\"0.75em\"}}>&#42; required</p>\n        <label htmlFor=\"contact-message\">Message &#42;</label>\n        <div className=\"textarea-container\">\n          <textarea\n            className=\"contact-message\"\n            placeholder=\"Write your message here\"\n            onKeyUp={this.handleMessageKeyUp}\n            style={this.state.messageValid === false ? {borderColor:\"red\"} : {}}\n            ref={(el)=>{\n              if(this.state.textarea === null){\n                this.setState({\n                  textarea: el\n                });\n              }\n            }}\n            />\n          <img src=\"/static/arrow_right.svg\" alt=\"resize\" className=\"textarea-resize\"/>\n        </div>\n        <div className=\"name-stuff\">\n          <label htmlFor=\"contact-name\">Your name</label>\n          <input\n          id=\"contact-name\"\n          type=\"text\"\n          onChange={this.handleNameChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"contact-email\">Your email &#42;</label>\n          <input\n          id=\"contact-email\"\n          type=\"text\"\n          onChange={this.handleEmailChange}\n          style={this.state.emailValid === false ? {borderColor:\"red\"} : {}}\n          />\n        </div>\n        <button className=\"blue-g\" id=\"btn-contact-send\" onClick={this.handleSubmitForm} style={this.state.submitDisabled ? { backgroundColor: \"#dcdcdc \"} : {}} disabled={this.state.submitDisabled}>Send to George Campbell</button>\n        <style jsx>{`\n          .contact-message {\n            width: 100%;\n            height: 14em;\n            min-height: 5em;\n            max-height: 1000px;\n            line-height: 1.5em;\n            resize: vertical;\n            max-width: 100%;\n            display: block;\n          }\n          .textarea-container {\n            margin-left: 0;\n          }\n          .textarea-resize {\n          }\n          label {\n            display: block;\n          }\n          input[type=\"text\"] {\n            width: 100%;\n            display: block;\n            min-height: 2em;\n            margin-bottom: 0.5em;\n            font-family: 'Hind Guntur',sans-serif;\n            font-size: 16px;\n            box-sizing: border-box;\n            border-radius: 3px;\n            border: 1px solid rgb(169,169,169);\n            padding-top: 5.5px;\n          }\n          .name-stuff {\n            margin: 20px 0;\n          }\n          #btn-contact-send {\n            margin-top: 20px;\n          }\n        `}</style>\n    </Resizer>\n    </React.Fragment>);\n  }\n}\nexport default ContactForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAaA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AAzBA;AA0BA;AACA;AAAA;AACA;AADA;AAGA;AACA;AA/BA;AAgCA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AAxCA;AAyCA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AAhDA;AAkDA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AAzDA;AA0DA;AACA;AAAA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AALA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAWA;AACA;;;AAwFA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAXA;AAAA;AAaA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvCA;AAAA;AAgFA;;;;AAvLA;AACA;AAwLA;;;;A","sourceRoot":""}